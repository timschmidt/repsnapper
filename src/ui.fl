# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
header_name {.h} 
code_name {.cxx}
decl {\#ifdef WIN32
\#  pragma warning( disable : 4311 4312 4244 4267 4800)
\#endif} {public global
} 

decl {class ModelViewController;} {public global
} 

class GUI {open
} {
  Function {GUI()} {open
  } {
    Fl_Window mainWindow {
      label {RepSnapper by Kulitorum www.kulitorum.com} open
      xywh {43 27 1275 860} type Double box UP_BOX color 39 selection_color 39 labelsize 12 hide resizable
    } {
      Fl_Menu_Bar MainMenuBar {open
        xywh {5 5 705 25} align 5
      } {
        Submenu Filemenu {
          label File open
          xywh {20 20 70 21}
        } {
          MenuItem OpenStl {
            label {Open Stl...}
            callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::STL, true);}
            xywh {20 20 36 21}
          }
          MenuItem OpenGCode {
            label {Open GCode...}
            callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::GCODE);}
            xywh {20 20 36 21}
          }
          Submenu Preferences {
            label Preferences open
            xywh {5 5 70 21}
          } {
            MenuItem LoadFrom {
              label {Load From...}
              callback {Fl_File_Chooser chooser(MVC->ProcessControl.SettingsPath.c_str(), "*.conf", Fl_File_Chooser::SINGLE, "Load settings as...");
chooser.show();
while (chooser.shown())
Fl::wait();
if(chooser.value() == 0)
return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ProcessControl.SettingsPath = dir;
MVC->ProcessControl.LoadConfig(dir);
MVC->CopySettingsToGUI();
};}
              xywh {10 10 36 21}
            }
            MenuItem Save {
              label Save
              callback {MVC->ProcessControl.SaveSettings();}
              xywh {10 10 36 21}
            }
            MenuItem SaveAs {
              label {Save As...}
              callback {Fl_File_Chooser chooser(MVC->ProcessControl.SettingsPath.c_str(), "*.conf", Fl_File_Chooser::SINGLE|Fl_File_Chooser::CREATE, "Save Settings As...");
chooser.show();
while (chooser.shown())
Fl::wait();
if(chooser.value() == 0)
return;
std::string dir(chooser.value());


if(dir.length())
{
MVC->ProcessControl.SettingsPath = dir;
MVC->ProcessControl.SaveSettingsAs(dir);
};}
              xywh {10 10 36 21}
            }
          }
          MenuItem Quit {
            label Quit
            callback {exit(0);} selected
            xywh {0 0 31 20}
          }
        }
        Submenu EditMenu {
          label Edit open
          xywh {20 20 70 21}
        } {
          MenuItem {PreferenceEditor ( when we have one)} {
            label {Preferences...}
            xywh {0 0 36 21} hide deactivate
          }
          MenuItem PrinterSettings {
            label {Printer Settings...}
            callback {printerSettingsWindow->show();}
            xywh {0 0 36 21}
          }
          MenuItem RaftSettings {
            label {Raft Settings...}
            callback {raftSettingsWindow->show();}
            xywh {0 0 36 21}
          }
          MenuItem DisplaySettings {
            label {Display Settings...}
            callback {DisplaySettingsWindow->show();}
            xywh {0 0 36 21}
          }
          MenuItem CustomButtonSettings {
            label {Custom Button Setup...}
            callback {CustomButtonsSetupWindow->show();}
            xywh {0 0 36 21}
          }
          MenuItem CalibrateSettings {
            label Calibrate
            callback {PrinterCalibrationWindow->show();}
            xywh {0 0 36 21}
          }
        }
        Submenu OptionsMenu {
          label Options open
          xywh {20 20 70 21} hide deactivate
        } {
          MenuItem SimpleAdvancedToggle {
            label {Toggle Simple or Advanced}
            callback {MVC->SimpleAdvancedToggle();}
            xywh {20 20 36 21}
          }
        }
      }
      Fl_Box MVC {
        label {An instace of ModelViewController}
        xywh {5 55 705 795} box UP_BOX align 16
        code0 {\#include "config.h"
\#include "stdafx.h"
\#include "file.h"}
        code1 {\#ifndef M_PI
\#define M_PI 3.14159265358979323846
\#endif}
        class ModelViewController
      }
      Fl_Tabs Tabs {
        callback {// here} open
        xywh {710 0 565 852} align 5 when 1
      } {
        Fl_Group SimpleTab {
          label Simple open
          xywh {715 21 545 824}
        } {
          Fl_Group {} {
            label Setup open
            xywh {725 87 535 88} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input SerialSpeedInputSimple {
              label {Speed:}
              callback {MVC->setSerialSpeed(o->value());}
              xywh {1045 132 135 26}
            }
            Fl_Light_Button ConnectToPrinterSimpleButton {
              label {Connect to printer}
              callback {MVC->serialConnected();
MVC->ConnectToPrinter(o->value());}
              xywh {740 99 160 25} selection_color 2
            }
            Fl_Text_Display {} {
              label {First lets connect to the printer}
              xywh {855 98 55 25} box NO_BOX align 8
            }
            Fl_Input_Choice portInputSimple {
              label {Port:}
              callback {MVC->setPort(std::string(o->input()->value()));}
              xywh {770 133 205 24} when 1
            } {
              MenuItem {} {
                label COM1
                user_data 1 user_data_type long
                xywh {20 20 100 20} value 1
              }
              MenuItem {} {
                label COM2
                user_data 2 user_data_type long
                xywh {30 30 100 20} value 1
              }
              MenuItem {} {
                label COM3
                user_data 3 user_data_type long
                xywh {40 40 100 20} value 1
              }
              MenuItem {} {
                label COM4
                user_data 4 user_data_type long
                xywh {50 50 100 20} value 1
              }
              MenuItem {} {
                label COM5
                user_data 5 user_data_type long
                xywh {60 60 100 20} value 1
              }
              MenuItem {} {
                label COM6
                user_data 6 user_data_type long
                xywh {70 70 100 20} value 1
              }
              MenuItem {} {
                label COM7
                user_data 7 user_data_type long
                xywh {80 80 100 20} value 1
              }
              MenuItem {} {
                label COM8
                user_data 8 user_data_type long
                xywh {90 90 100 20} value 1
              }
              MenuItem {} {
                label COM9
                user_data 8 user_data_type long
                xywh {100 100 100 20} value 1
              }
            }
          }
          Fl_Group {} {
            label Model open
            xywh {725 199 535 141} box ENGRAVED_FRAME color 39
          } {
            Fl_Button {} {
              label {Load STL}
              callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::STL, true);}
              xywh {740 217 160 25}
            }
            Fl_Button {} {
              label {Convert to GCode}
              callback {MVC->ConvertToGCode();}
              xywh {740 246 160 25}
            }
            Fl_Text_Display {} {
              label {Then you want to load an STL model}
              xywh {855 216 55 25} box NO_BOX align 8
            }
            Fl_Text_Display {} {
              label {And convert it into GCODE}
              xywh {855 246 60 24} box NO_BOX align 8
            }
            Fl_Button {} {
              label {Load GCode}
              callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::GCODE);}
              xywh {740 296 160 25}
            }
            Fl_Text_Display {} {
              label {Or just load previously generated GCODE directly}
              xywh {855 296 45 29} box NO_BOX align 8
            }
            Fl_Box {} {
              label {-----------------------------------------------------------------------------------------------------}
              xywh {940 270 120 25}
            }
          }
          Fl_Group {} {
            label Print open
            xywh {725 363 535 62} box ENGRAVED_FRAME color 39
          } {
            Fl_Text_Display {} {
              label {Make a print}
              xywh {865 378 45 25} box NO_BOX align 8
            }
            Fl_Button {} {
              label Print
              callback {MVC->SimplePrint();}
              xywh {740 378 160 25}
            }
          }
          Fl_Output VersionText {
            label Version
            xywh {805 819 220 26}
          }
        }
        Fl_Group InputTab {
          label {Input file}
          xywh {710 19 560 832} hide
        } {
          Fl_Button {} {
            label {Load STL}
            callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::STL);}
            xywh {815 41 325 38}
          }
          Fl_Light_Button FixSTLerrorsButton {
            label {Fix STL errors}
            callback {MVC->redraw()}
            xywh {910 89 135 21} value 1 selection_color 63
          }
          Fl_Button {} {
            label {Save STL}
            callback {FileChooser::ioDialog (MVC, FileChooser::SAVE, FileChooser::STL);}
            xywh {715 126 135 21} deactivate
          }
          Fl_Group {} {
            label {Object rotation}
            xywh {715 710 535 50} box FLAT_BOX color 39
          } {
            Fl_Button AutoRotateButton {
              label {Auto rotate}
              callback {MVC->OptimizeRotation();
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {725 720 125 25}
            }
            Fl_Button RotateXButton {
              label {Rotate X}
              callback {MVC->RotateObject(1,0,0, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {855 720 125 25}
            }
            Fl_Button RotateYButton {
              label {Rotate Y}
              callback {MVC->RotateObject(0,1,0, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {985 720 125 25}
            }
            Fl_Button RotateZButton {
              label {Rotate Z}
              callback {MVC->RotateObject(0,0,1, (float)(M_PI/4));
MVC->CalcBoundingBoxAndZoom();
MVC->redraw();}
              xywh {1115 720 125 25}
            }
          }
          Fl_Box RFP_Browser {
            label {RFO file}
            callback {MVC->redraw();}
            xywh {720 156 355 450} box UP_BOX align 16 when 1 resizable
            code0 {\#include "flu_tree_browser.h"}
            class Flu_Tree_Browser
          }
          Fl_Group {} {
            label Translate
            xywh {1080 163 180 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input TranslateX {
              label X
              callback {MVC->Translate("X", o->value());}
              xywh {1095 174 45 23} minimum -300 maximum 300 step 0.1
            }
            Fl_Value_Input TranslateY {
              label Y
              callback {MVC->Translate("Y", o->value());}
              xywh {1155 175 45 23} minimum -300 maximum 300 step 0.1
            }
            Fl_Value_Input TranslateZ {
              label Z
              callback {MVC->Translate("Z", o->value());}
              xywh {1210 175 45 23} minimum -300 maximum 300 step 0.01
            }
          }
          Fl_Group {} {
            label Rotate
            xywh {1080 226 180 40} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input RotateX {
              label X
              callback {MVC->RotateObject(1,0,0, M_PI * o->value() / 180.0);}
              xywh {1095 237 45 23} minimum -360 maximum 360 step 1
            }
            Fl_Value_Input RotateY {
              label Y
              callback {MVC->RotateObject(0,1,0, M_PI * o->value() / 180.0);}
              xywh {1155 238 45 23} minimum -360 maximum 360 step 1
            }
            Fl_Value_Input RotateZ {
              label Z
              callback {MVC->RotateObject(0,0,1, M_PI * o->value() / 180.0);}
              xywh {1210 238 45 23} minimum -360 maximum 360 step 1
            }
          }
          Fl_Group {} {
            label Scale
            xywh {1080 289 180 68} box ENGRAVED_FRAME color 39
          } {
            Fl_Value_Input ScaleX {
              label X
              callback {MVC->Scale("X", o->value());}
              xywh {1095 298 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Value_Input ScaleY {
              label Y
              callback {MVC->Scale("Y", o->value());}
              xywh {1155 299 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Value_Input ScaleZ {
              label Z
              callback {MVC->Scale("Z", o->value());}
              xywh {1210 299 45 23} minimum -100 maximum 100 step 0.01 value 1
            }
            Fl_Light_Button ScaleAllAxies {
              label {All axis}
              xywh {1095 327 160 20} value 1 selection_color 2
            }
          }
          Fl_Input FileLocationInput {
            label {File location}
            callback {MVC->setFileLocation(o->value());}
            xywh {1080 428 180 24} align 5
          }
          Fl_Input FileTypeInput {
            label Filetype
            callback {MVC->setFileType(o->value());}
            xywh {1080 473 180 24} align 5
          }
          Fl_Input FileMaterialInput {
            label {File material}
            callback {MVC->setFileMaterial(o->value());}
            xywh {1080 518 180 24} align 5
          }
          Fl_Input ObjectNameInput {
            label {Object name}
            callback {MVC->setObjectname(o->value());}
            xywh {1080 383 180 24} align 5
          }
          Fl_Button {} {
            label Delete
            callback {MVC->ProcessControl.rfo.DeleteSelected(MVC);}
            xywh {860 127 135 25}
          }
          Fl_Button {} {
            label Duplicate
            callback {MVC->Duplicate();}
            xywh {1005 127 135 25}
          }
        }
        Fl_Group {} {
          label GCode open
          xywh {710 20 560 829} hide
        } {
          Fl_Button {} {
            label {Load Gcode}
            callback {FileChooser::ioDialog (MVC, FileChooser::OPEN, FileChooser::GCODE);}
            xywh {730 85 140 25}
            code0 {\#include <FL/Fl_File_Chooser.H>}
          }
          Fl_Output GCodeLengthText {
            xywh {870 86 110 24}
          }
          Fl_Button {} {
            label {Convert to GCode}
            callback {MVC->ConvertToGCode();}
            xywh {815 40 325 39}
          }
          Fl_Tabs {} {
            xywh {715 175 555 664} color 66 selection_color 31
          } {
            Fl_Text_Editor GCodeStart {
              label Start
              xywh {715 193 555 646} selection_color 31
              code0 {Fl_Text_Buffer *startbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(startbuff);}
            }
            Fl_Text_Editor GCodeLayer {
              label {Next layer}
              xywh {715 194 555 645} selection_color 31 hide
              code0 {Fl_Text_Buffer *layerbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(layerbuff);}
            }
            Fl_Text_Editor GCodeEnd {
              label {End code}
              xywh {715 195 555 644} selection_color 31 hide
              code0 {Fl_Text_Buffer *endbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(endbuff);}
            }
            Fl_Text_Editor GCodeResult {
              label Result
              xywh {715 195 555 644} selection_color 31 hide
              code0 {Fl_Text_Buffer *resultbuff = new Fl_Text_Buffer();}
              code1 {o->buffer(resultbuff);}
            }
          }
          Fl_Button {} {
            label {Save Gcode}
            callback {FileChooser::ioDialog (MVC, FileChooser::SAVE, FileChooser::GCODE);}
            xywh {980 84 210 26}
            code0 {\#include <FL/Fl_File_Chooser.H>}
          }
          Fl_Input GCodeInput {
            label {Send a GCode}
            callback {MVC->SendNow(o->value());}
            xywh {825 140 325 25} when 10
          }
          Fl_Return_Button {} {
            label Send
            callback {MVC->SendNow(GCodeInput->value());}
            xywh {1155 140 70 25}
          }
        }
        Fl_Group Interactive {
          label Interactive open
          xywh {710 19 565 833} align 0 hide
        } {
          Fl_Group {} {
            label Controls
            xywh {710 40 565 520}
          } {
            Fl_Button {} {
              label Home
              callback {MVC->Home("X");}
              xywh {730 46 60 20}
            }
            Fl_Button {} {
              label Home
              callback {MVC->Home("Y");}
              xywh {730 66 60 20}
            }
            Fl_Button {} {
              label Home
              callback {MVC->Home("Z");}
              xywh {730 86 60 20}
            }
            Fl_Button {} {
              label {Find position in Gcode}
              xywh {831 115 370 25} deactivate
            }
            Fl_Button {} {
              label {Home all}
              callback {MVC->Home("ALL");}
              xywh {725 110 85 35}
            }
            Fl_Button {} {
              label {-10}
              callback {MVC->Move("X", -10);}
              xywh {870 46 35 20}
            }
            Fl_Button {} {
              label {-1}
              callback {MVC->Move("X", -1);}
              xywh {910 46 35 20}
            }
            Fl_Button {} {
              label {-.1}
              callback {MVC->Move("X", -0.1f);}
              xywh {950 46 35 20}
            }
            Fl_Button {} {
              label {+.1}
              callback {MVC->Move("X", 0.1f);}
              xywh {1040 46 35 20}
            }
            Fl_Button {} {
              label {+1}
              callback {MVC->Move("X", 1);}
              xywh {1080 46 35 20}
            }
            Fl_Button {} {
              label {+10}
              callback {MVC->Move("X", 10);}
              xywh {1120 46 30 20}
            }
            Fl_Button {} {
              label {-100}
              callback {MVC->Move("X", -100);}
              xywh {820 46 45 20}
            }
            Fl_Button {} {
              label {+100}
              callback {MVC->Move("X", 100);}
              xywh {1155 46 45 20}
            }
            Fl_Button {} {
              label {-10}
              callback {MVC->Move("Y", -10);}
              xywh {870 66 35 20}
            }
            Fl_Button {} {
              label {-1}
              callback {MVC->Move("Y", -1);}
              xywh {910 66 35 20}
            }
            Fl_Button {} {
              label {-.1}
              callback {MVC->Move("Y", -0.1f);}
              xywh {950 66 35 20}
            }
            Fl_Button {} {
              label {+.1}
              callback {MVC->Move("Y", 0.1f);}
              xywh {1040 66 35 20}
            }
            Fl_Button {} {
              label {+1}
              callback {MVC->Move("Y", 1);}
              xywh {1080 66 35 20}
            }
            Fl_Button {} {
              label {+10}
              callback {MVC->Move("Y", 10);}
              xywh {1120 66 30 20}
            }
            Fl_Button {} {
              label {-100}
              callback {MVC->Move("Y", -100);}
              xywh {820 66 45 20}
            }
            Fl_Button {} {
              label {+100}
              callback {MVC->Move("Y", 100);}
              xywh {1155 66 45 20}
            }
            Fl_Button {} {
              label {-10}
              callback {MVC->Move("Z", -10);}
              xywh {870 86 35 20}
            }
            Fl_Button {} {
              label {-1}
              callback {MVC->Move("Z", -1);}
              xywh {910 86 35 20}
            }
            Fl_Button {} {
              label {-.1}
              callback {MVC->Move("Z", -0.1f);}
              xywh {950 86 35 20}
            }
            Fl_Button {} {
              label {+.1}
              callback {MVC->Move("Z", 0.1f);}
              xywh {1040 86 35 20}
            }
            Fl_Button {} {
              label {+1}
              callback {MVC->Move("Z", 1);}
              xywh {1080 86 35 20}
            }
            Fl_Button {} {
              label {+10}
              callback {MVC->Move("Z", 10);}
              xywh {1120 86 30 20}
            }
            Fl_Button {} {
              label {-100}
              callback {MVC->Move("Z", -100);}
              xywh {820 86 45 20}
            }
            Fl_Button {} {
              label {+100}
              callback {MVC->Move("Z", 100);}
              xywh {1155 86 45 20}
            }
            Fl_Value_Input XposText {
              callback {MVC->Goto("X", o->value());}
              xywh {990 46 45 20} maximum 500
            }
            Fl_Value_Input YposText {
              callback {MVC->Goto("Y", o->value());}
              xywh {990 64 45 22} maximum 500
            }
            Fl_Value_Input ZposText {
              callback {MVC->Goto("Z", o->value());}
              xywh {990 85 45 21} maximum 500
            }
            Fl_Button CustomButton1 {
              label {Custom button 1}
              callback {MVC->SendCustomButton(1);}
              xywh {720 414 265 20}
            }
            Fl_Button CustomButton3 {
              label {Custom button 3}
              callback {MVC->SendCustomButton(3);}
              xywh {720 434 265 20}
            }
            Fl_Button CustomButton2 {
              label {Custom button 2}
              callback {MVC->SendCustomButton(2);}
              xywh {990 414 270 20}
            }
            Fl_Button CustomButton4 {
              label {Custom button 4}
              callback {MVC->SendCustomButton(4);}
              xywh {990 434 270 20}
            }
            Fl_Button CustomButton5 {
              label {Custom button 5}
              callback {MVC->SendCustomButton(5);}
              xywh {720 454 265 20}
            }
            Fl_Button CustomButton7 {
              label {Custom button 7}
              callback {MVC->SendCustomButton(7);}
              xywh {720 474 265 20}
            }
            Fl_Button CustomButton6 {
              label {Custom button 6}
              callback {MVC->SendCustomButton(6);}
              xywh {990 454 270 20}
            }
            Fl_Button CustomButton8 {
              label {Custom button 8}
              callback {MVC->SendCustomButton(8);}
              xywh {990 474 270 20}
            }
            Fl_Button CustomButton9 {
              label {Custom button 9}
              callback {MVC->SendCustomButton(9);}
              xywh {720 494 265 20}
            }
            Fl_Button CustomButton10 {
              label {Custom button 10}
              callback {MVC->SendCustomButton(10);}
              xywh {990 494 270 20}
            }
            Fl_Button CustomButton11 {
              label {Custom button 11}
              callback {MVC->SendCustomButton(11);}
              xywh {720 414 265 20} hide deactivate
            }
            Fl_Button CustomButton13 {
              label {Custom button 13}
              callback {MVC->SendCustomButton(13);}
              xywh {720 434 265 20} hide deactivate
            }
            Fl_Button CustomButton12 {
              label {Custom button 12}
              callback {MVC->SendCustomButton(12);}
              xywh {990 414 270 20} hide deactivate
            }
            Fl_Button CustomButton14 {
              label {Custom button 14}
              callback {MVC->SendCustomButton(14);}
              xywh {990 434 270 20} hide deactivate
            }
            Fl_Button CustomButton15 {
              label {Custom button 15}
              callback {MVC->SendCustomButton(15);}
              xywh {720 454 265 20} hide deactivate
            }
            Fl_Button CustomButton17 {
              label {Custom button 17}
              callback {MVC->SendCustomButton(17);}
              xywh {720 474 265 20} hide deactivate
            }
            Fl_Button CustomButton16 {
              label {Custom button 16}
              callback {MVC->SendCustomButton(16);}
              xywh {990 454 270 20} hide deactivate
            }
            Fl_Button CustomButton18 {
              label {Custom button 18}
              callback {MVC->SendCustomButton(18);}
              xywh {990 474 270 20} hide deactivate
            }
            Fl_Button CustomButton19 {
              label {Custom button 19}
              callback {MVC->SendCustomButton(19);}
              xywh {720 494 265 20} hide deactivate
            }
            Fl_Button CustomButton20 {
              label {Custom button 20}
              callback {MVC->SendCustomButton(20);}
              xywh {990 494 270 20} hide deactivate
            }
            Fl_Group {} {
              label Feedback
              xywh {815 520 420 40} box ENGRAVED_FRAME color 39 align 4
            } {
              Fl_Light_Button {} {
                label Errors
                callback {MVC->serial->SetDebugMask(DEBUG_ERRORS, (bool)o->value());}
                xywh {830 530 70 20} value 1 selection_color 2
              }
              Fl_Light_Button {} {
                label Info
                callback {MVC->serial->SetDebugMask(DEBUG_INFO, (bool)o->value());}
                xywh {995 530 65 20} value 1 selection_color 2
              }
              Fl_Light_Button {} {
                label Echo
                callback {MVC->serial->SetDebugMask(DEBUG_ECHO, (bool)o->value());}
                xywh {910 530 70 20} value 1 selection_color 2
              }
            }
            Fl_Group {} {
              label Fan open
              xywh {775 368 495 40} box ENGRAVED_FRAME color 39 align 4
            } {
              Fl_Light_Button FanOnButton {
                label {Fan on}
                callback {MVC->SetFan(o->value() ? FanPowerSlider->value() : 0);}
                xywh {810 376 85 25} selection_color 2
              }
              Fl_Value_Slider FanPowerSlider {
                label Voltage
                callback {FanOnButton->value(true);
MVC->SetFan(o->value()*(255.0f/12.0f));}
                xywh {980 378 195 20} type {Horz Knob} align 4 when 4 maximum 12 value 5 textsize 14
              }
            }
            Fl_Group Extruder {
              label Extruder open
              xywh {775 283 495 81} box ENGRAVED_FRAME align 4
            } {
              Fl_Light_Button RunExtruderButton {
                label {Run extruder}
                callback {MVC->RunExtruder();}
                xywh {810 288 115 28}
              }
              Fl_Light_Button SetExtruderDirectionButton {
                label Reverse
                callback {MVC->SetExtruderDirection(o->value());}
                xywh {950 288 75 29}
              }
              Fl_Value_Slider {} {
                label Speed
                callback {MVC->SetExtruderSpeed(o->value());}
                xywh {830 340 200 15} type {Horz Knob} align 4 minimum 5 maximum 9999 step 1 value 3000 textsize 14
              }
              Fl_Value_Slider {} {
                label Length
                callback {MVC->SetExtruderLength(o->value());}
                xywh {830 320 200 15} type {Horz Knob} align 4 minimum 10 maximum 850 step 1 value 150 textsize 14
              }
              Fl_Value_Slider DownstreamMultiplierSlider {
                label {Downstream speed multiplier}
                xywh {1030 340 235 15} type {Horz Knob} align 5 minimum 0.01 maximum 25 value 1 textsize 14
              }
              Fl_Value_Slider DownstreamExtrusionMultiplierSlider {
                label {Downstream extrusion multiplier}
                xywh {1030 305 235 15} type {Horz Knob} align 5 minimum 0.01 maximum 25 value 1 textsize 14
              }
            }
            Fl_Group Temperatures {open
              xywh {715 149 555 137}
            } {
              Fl_Value_Slider TempUpdateSpeedSlider {
                label {Temperature display update interval}
                callback {MVC->SetTempUpdateSpeed(o->value());}
                xywh {990 167 205 18} type {Horz Knob} align 4 minimum 0.1 maximum 10 step 0.1 value 3 textsize 14
              }
              Fl_Light_Button TempReadingEnabledButton {
                label Enable
                callback {MVC->EnableTempReading(o->value());}
                xywh {1200 163 70 24} value 1 selection_color 2
              }
              Fl_Group {} {
                label Nozzle open
                xywh {775 190 495 40} box ENGRAVED_FRAME align 4
              } {
                Fl_Light_Button SwitchHeatOnButton {
                  label {heat on}
                  callback {MVC->SwitchHeat(o->value(), TargetTempText->value());}
                  xywh {805 194 85 30}
                }
                Fl_Value_Input TargetTempText {
                  label Target
                  callback {MVC->SetTargetTemp(o->value());}
                  xywh {1175 200 90 24} maximum 300 value 200
                }
                Fl_Output CurrentTempText {
                  label Current
                  xywh {985 199 90 26}
                }
              }
              Fl_Group {} {
                label Bed open
                xywh {775 235 495 41} box ENGRAVED_FRAME color 39 align 4
              } {
                Fl_Light_Button BedHeatOnButton {
                  label {bed heat on}
                  callback {MVC->SwitchBedHeat(o->value(), TargetBedTempText->value());}
                  xywh {805 241 105 28} selection_color 2
                }
                Fl_Output CurrentBedTempText {
                  label Current
                  xywh {985 244 90 26}
                }
                Fl_Value_Input TargetBedTempText {
                  label Target
                  callback {MVC->SetBedTargetTemp(o->value());}
                  xywh {1175 246 90 24} maximum 300 value 200
                }
              }
            }
          }
          Fl_Group {} {open
            xywh {720 557 550 291}
          } {
            Fl_Tabs {} {open
              xywh {720 562 540 191}
            } {
              Fl_Group {} {
                label {Communication Log} open
                xywh {720 585 530 158}
              } {
                Fl_Browser CommunationLog {
                  label {Errors / warnings}
                  xywh {740 585 510 158} selection_color 31 align 16
                  code0 {\#include <FL/Fl_Multi_Browser.H>}
                  class Fl_Multi_Browser
                }
              }
              Fl_Group {} {
                label {Errors / warnings} open
                xywh {720 585 530 158} hide
              } {
                Fl_Browser ErrorLog {
                  label {Errors / warnings}
                  xywh {740 585 505 158} selection_color 31 align 16
                  code0 {\#include <FL/Fl_Multi_Browser.H>}
                  class Fl_Multi_Browser
                }
              }
              Fl_Group {} {
                label Echo open
                xywh {740 580 510 158} hide
              } {
                Fl_Browser Echo {
                  label Echo
                  xywh {740 580 510 158} selection_color 31 align 16
                  code0 {\#include <FL/Fl_Multi_Browser.H>}
                  class Fl_Multi_Browser
                }
              }
            }
            Fl_Light_Button AutoscrollButton {
              label {Auto scroll}
              xywh {725 753 95 25} value 1 selection_color 2
            }
            Fl_Value_Slider LinesToKeepSlider {
              label {Keep only the last \# lines:}
              callback {MVC->SetKeepLines(o->value());}
              xywh {970 778 285 30} type {Horz Knob} align 5 minimum 100 maximum 100000 step 1 value 1000 textsize 14
            }
            Fl_Light_Button FileLogginEnabledButton {
              label LogFiles
              callback {MVC->SetFileLogging(o->value());}
              xywh {825 753 115 25} value 1 selection_color 2
            }
            Fl_Light_Button ClearLogfilesWhenPrintStartsButton {
              label {Clear logs when print starts}
              callback {MVC->SetLogFileClear(o->value());}
              xywh {725 783 215 25} value 1 selection_color 2
            }
            Fl_Button {} {
              label {Clear logs now}
              callback {MVC->ClearLogs();}
              xywh {725 813 215 25}
            }
          }
        }
        Fl_Group PrintTab {
          label Print open
          xywh {715 19 550 493} color 47 hide
        } {
          Fl_Group {} {
            label Print open
            xywh {725 57 515 324} box ENGRAVED_FRAME color 39
          } {
            Fl_Light_Button ConnectToPrinterButton {
              label {Connect to printer}
              callback {MVC->serialConnected();
MVC->ConnectToPrinter(o->value());}
              xywh {775 83 150 27} selection_color 2
            }
            Fl_Light_Button PrintButton {
              label Print
              callback {MVC->PrintButton();}
              xywh {775 200 360 50} selection_color 2 align 48
            }
            Fl_Light_Button {} {
              label {Power on}
              callback {MVC->SwitchPower(o->value());}
              xywh {935 83 90 27} selection_color 2
            }
            Fl_Button KickButton {
              label Kick
              callback {MVC->Continue();}
              xywh {1050 83 85 27}
            }
            Fl_Light_Button ContinueButton {
              label Pause
              callback {MVC->ContinuePauseButton();}
              xywh {775 140 360 40} selection_color 2 align 16 deactivate
            }
          }
        }
        Fl_Group {} {
          label lua
          xywh {710 20 560 825} hide deactivate resizable
        } {
          Fl_Group LuaTab {
            label {Lua script} open
            xywh {710 20 560 785} box ENGRAVED_FRAME color 39 hide deactivate
          } {
            Fl_Text_Editor LuaScriptEditor {
              label {LUA script:}
              xywh {1135 55 130 735} align 5
              code0 {Fl_Text_Buffer *luascript = new Fl_Text_Buffer();}
              code1 {o->buffer(luascript);}
            }
            Fl_Button RunLuaButton {
              label Run
              callback {MVC->RunLua(LuaScriptEditor->buffer()->text());}
              xywh {1265 20 5 30}
            }
          }
        }
      }
      Fl_Progress ProgressBar {
        label {Progress:}
        xywh {75 35 635 15} selection_color 63 align 4
      }
    }
    Fl_Window printerSettingsWindow {
      label {Printer settings}
      xywh {404 44 740 710} type Double hide resizable modal
    } {
      Fl_Group {} {
        label {Build volume (mm)} open
        xywh {145 25 230 40} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Input VolumeX {
          label X
          xywh {165 36 45 23} maximum 5000 step 1 value 200
        }
        Fl_Value_Input VolumeY {
          label Y
          xywh {240 36 45 23} maximum 5000 value 200
        }
        Fl_Value_Input VolumeZ {
          label Z
          xywh {315 36 45 23} maximum 5000 value 140
        }
      }
      Fl_Group {} {
        label {Print margin  (mm)}
        xywh {405 25 235 40} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Input MarginX {
          label X
          callback {MVC->SetPrintMargin("X", o->value());}
          xywh {430 36 45 23} maximum 100 step 1 value 10
        }
        Fl_Value_Input MarginY {
          label Y
          callback {MVC->SetPrintMargin("Y", o->value());}
          xywh {505 36 45 23} maximum 100 step 1 value 10
        }
        Fl_Value_Input MarginZ {
          label Z
          callback {MVC->SetPrintMargin("Z", o->value());}
          xywh {575 37 45 23} minimum -50 maximum 100 step 0.01
        }
      }
      Fl_Group {} {
        label Acceleration
        xywh {415 425 315 75} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider distanceToReachFullSpeedSlider {
          label {Distance used to read full speed(mm)}
          callback {MVC->SetDistanceToReachFullSpeed(o->value())}
          xywh {425 475 295 15} type {Horz Knob} selection_color 2 align 5 maximum 10 value 0.1 textsize 14
        }
        Fl_Light_Button EnableAccelerationButton {
          label {Enable Acceleration}
          callback {MVC->SetEnableAcceleration(o->value());
if(o->value())
{
distanceToReachFullSpeedSlider->activate();
}
else
{
distanceToReachFullSpeedSlider->deactivate();
}}
          xywh {480 435 170 20} selection_color 63
        }
      }
      Fl_Group {} {
        label {Print speeds} open
        xywh {15 295 390 90} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider MaxPrintSpeedXYSlider {
          label {Max XY (mm/minute)}
          callback {MVC->SetMaxPrintSpeedXY(o->value());}
          xywh {215 318 170 16} type {Horz Knob} selection_color 2 align 5 maximum 8000 step 100 value 4000 textsize 14
        }
        Fl_Value_Slider MinPrintSpeedZSlider {
          label {Min  Z (mm/minute)}
          callback {MVC->SetMinPrintSpeedZ(o->value());}
          xywh {25 357 165 16} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 2500 step 10 value 50 textsize 14
        }
        Fl_Value_Slider MinPrintSpeedXYSlider {
          label {Min XY (mm/minute)}
          callback {MVC->SetMinPrintSpeedXY(o->value());}
          xywh {30 320 165 20} type {Horz Knob} selection_color 2 align 5 maximum 8000 step 100 value 1000 textsize 14
        }
        Fl_Value_Slider MaxPrintSpeedZSlider {
          label {Max Z (mm/minute)}
          callback {MVC->SetMaxPrintSpeedZ(o->value());}
          xywh {215 356 170 18} type {Horz Knob} selection_color 2 align 5 maximum 2500 step 10 value 150 textsize 14
        }
      }
      Fl_Group {} {
        label Extruder open
        xywh {15 85 390 190} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider ExtrudedMaterialWidthSlider {
          label {Extruded material width}
          callback {MVC->SetExtrudedMaterialWidth(o->value());}
          xywh {25 160 230 20} type {Horz Knob} selection_color 2 align 5 maximum 10 value 0.7 textsize 14
        }
        Fl_Value_Slider extrusionFactorSlider {
          label {Extrusion multiplier}
          callback {MVC->SetExtrusionFactor(o->value());}
          xywh {25 200 230 20} type {Horz Knob} selection_color 2 align 5 maximum 2 value 1 textsize 14
        }
        Fl_Light_Button UseIncrementalEcodeButton {
          label {Incremental ecode (seperate controller)}
          callback {MVC->SetUseIncrementalEcode(o->value());}
          xywh {25 95 305 20} selection_color 63
        }
        Fl_Value_Slider LayerThicknessSlider {
          label {Layer Thickness}
          callback {MVC->SetLayerThickness(o->value());}
          xywh {25 240 230 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 value 0.4 textsize 14
        }
        Fl_Light_Button Use3DGcodeButton {
          label {Use 3D Gcode (for DC extruders)}
          callback {MVC->SetUse3DGcode(o->value());}
          xywh {25 120 255 20} selection_color 63
        }
      }
      Fl_Group {} {
        label {Antiooze Retraction} open
        xywh {415 525 315 125} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider antioozeDistanceSlider {
          label {Distance to retract filament (mm)}
          callback {MVC->SetAntioozeDistance(o->value())}
          tooltip {Not the actual distance the filament is moved but the equivalent extrudate} xywh {425 580 300 15} type {Horz Knob} selection_color 2 align 5 maximum 60 step 0.5 value 4.5 textsize 14
        }
        Fl_Light_Button EnableAntioozeButton {
          label {Enable Antiooze Retraction}
          callback {MVC->SetEnableAntiooze(o->value());
if(o->value())
{
antioozeDistanceSlider->activate();
antioozeSpeedSlider->activate();
}
else
{
antioozeDistanceSlider->deactivate();
antioozeSpeedSlider->deactivate();
}}
          xywh {470 535 215 20} selection_color 63
        }
        Fl_Value_Slider antioozeSpeedSlider {
          label {Speed to retract filament}
          callback {MVC->SetAntioozeSpeed(o->value())}
          xywh {425 616 300 18} type {Horz Knob} selection_color 2 align 5 maximum 16000 step 100 value 1000 textsize 14
        }
      }
      Fl_Group {} {
        label Port open
        xywh {415 83 315 112} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Input SerialSpeedInput {
          label {Speed:}
          callback {MVC->setSerialSpeed(o->value());}
          xywh {475 125 70 22}
        }
        Fl_Input_Choice portInput {
          label {Port:}
          callback {MVC->setPort(std::string(o->input()->value()));}
          xywh {475 92 175 23} when 1
        } {
          MenuItem {} {
            label COM1
            user_data 1 user_data_type long
            xywh {20 20 100 20} value 1
          }
          MenuItem {} {
            label COM2
            user_data 2 user_data_type long
            xywh {30 30 100 20} value 1
          }
          MenuItem {} {
            label COM3
            user_data 3 user_data_type long
            xywh {40 40 100 20} value 1
          }
          MenuItem {} {
            label COM4
            user_data 4 user_data_type long
            xywh {50 50 100 20} value 1
          }
          MenuItem {} {
            label COM5
            user_data 5 user_data_type long
            xywh {60 60 100 20} value 1
          }
          MenuItem {} {
            label COM6
            user_data 6 user_data_type long
            xywh {70 70 100 20} value 1
          }
          MenuItem {} {
            label COM7
            user_data 7 user_data_type long
            xywh {80 80 100 20} value 1
          }
          MenuItem {} {
            label COM8
            user_data 8 user_data_type long
            xywh {90 90 100 20} value 1
          }
          MenuItem {} {
            label COM9
            user_data 8 user_data_type long
            xywh {100 100 100 20} value 1
          }
        }
        Fl_Light_Button ValidateConnection {
          label {Validate connection}
          callback {MVC->SetValidateConnection(o->value());}
          xywh {475 157 200 18} selection_color 63
        }
      }
      Fl_Group {} {
        label {Receiving buffer size}
        xywh {415 225 315 50} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider ReceivingBufferSizeSlider {
          label {Buffer size on printer, in number of gcodes}
          callback {MVC->SetReceivingBufferSize(o->value())}
          tooltip {Recommended value for FiveD is 4} xywh {420 250 305 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 100 step 1 value 4 textsize 14
        }
      }
      Fl_Button {} {
        label Ok
        callback {printerSettingsWindow->hide();}
        xywh {295 660 155 35}
      }
      Fl_Group {} {
        label Infill
        xywh {5 405 400 125} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider InfillRotationSlider {
          label Rotation
          callback {MVC->SetInfillRotation(o->value());}
          xywh {10 495 190 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 45 textsize 14
        }
        Fl_Value_Slider InfillRotationPrLayerSlider {
          label {InFill Rotation pr. Layer}
          callback {MVC->SetInfillRotationPrLayer(o->value());}
          xywh {200 455 200 15} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
        }
        Fl_Value_Slider InfillDistanceSlider {
          label {Infill Distance}
          callback {MVC->SetInfillDistance(o->value());}
          xywh {200 495 200 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
        }
        Fl_Light_Button ShellOnlyButton {
          label {Shell Only - no infill}
          callback {MVC->SetShellOnly(o->value());}
          xywh {100 415 175 20} selection_color 63
        }
        Fl_Value_Slider ShellCountSlider {
          label {Shell count}
          callback {MVC->SetShellCount(o->value());}
          xywh {10 450 190 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 10 step 1 value 1 textsize 14
        }
      }
      Fl_Group {} {
        label {Shrinking quality} open
        xywh {415 300 315 95} box ENGRAVED_FRAME color 2
      } {
        Fl_Choice shrinkAlgorithm {
          label {Shrinking Algorithm:} open
          xywh {570 315 125 20} down_box BORDER_BOX
        } {
          MenuItem {} {
            label {Fast, can have errors}
            callback {MVC->SetShrinkQuality("Fast");
MVC->redraw();}
            xywh {15 15 30 20}
          }
          MenuItem {} {
            label {Logick's Algorithm}
            callback {MVC->SetShrinkQuality("Logick");
MVC->redraw();}
            xywh {25 25 30 20}
          }
        }
        Fl_Value_Slider OptimizationSlider {
          label Optimization
          callback {MVC->SetOptimization(o->value());}
          xywh {425 360 280 20} type {Horz Knob} selection_color 2 align 5 minimum 0.001 step 0.001 value 0.05 textsize 14
        }
      }
      Fl_Group {} {
        label {Alternate Infill Layers} open
        xywh {0 550 405 100} box ENGRAVED_FRAME color 39
      } {
        Fl_Input AltInfillLayersInput {
          label Layers
          callback {MVC->SetAltInfillLayersText(o->value());}
          xywh {55 620 105 15}
        }
        Fl_Text_Display {} {
          label {Comma separated layer numbers, 0 is the lowest layer, -1 is the highest}
          xywh {0 560 10 30} box NO_BOX labelsize 10 align 8
        }
        Fl_Text_Display {} {
          label {(eg. 0,1,-1,-2 means the top and bottom two layers)}
          xywh {30 580 20 20} box NO_BOX labelsize 10 align 8
        }
        Fl_Value_Slider AltInfillDistanceSlider {
          label {Infill Distance}
          callback {MVC->SetAltInfillDistance(o->value());}
          xywh {160 615 230 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
        }
      }
    }
    Fl_Window raftSettingsWindow {
      label {Raft Settings}
      xywh {342 45 546 658} type Double hide resizable modal
    } {
      Fl_Light_Button RaftEnableButton {
        label {Raft Enable}
        callback {MVC->SetRaftEnable(o->value());
MVC->redraw();}
        xywh {195 10 130 25}
      }
      Fl_Group {} {
        label Base
        xywh {5 125 535 230} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider RaftMaterialPrDistanceRatioSlider {
          label {Material pr. distance ratio}
          callback {MVC->SetRaftMaterialPrDistanceRatio(o->value());}
          xywh {15 185 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1.75 textsize 14
        }
        Fl_Value_Slider RaftRotationSlider {
          label Rotation
          callback {MVC->SetRaftRotation(o->value());}
          xywh {15 220 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
        }
        Fl_Value_Slider RaftBaseDistanceSlider {
          label {Distance between lines}
          callback {MVC->SetRaftBaseDistance(o->value());}
          tooltip {Distance between the base layer's lines} xywh {15 255 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
        }
        Fl_Value_Slider RaftBaseThicknessSlider {
          label {Thickness ratio}
          callback {MVC->SetRaftBaseThickness(o->value());}
          tooltip {How much thicker or thinner then a normal layer should the raft base be.} xywh {15 290 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
        }
        Fl_Value_Slider RaftBaseLayerCountSlider {
          label {Number of Base layers}
          callback {MVC->SetRaftBaseLayerCount(o->value());}
          xywh {15 150 515 20} type {Horz Knob} selection_color 2 align 5 maximum 5 step 1 value 1 textsize 14
        }
        Fl_Value_Slider RaftBaseTemperatureSlider {
          label {Temperature ratio}
          callback {MVC->SetRaftBaseTemperature(o->value());}
          tooltip {To make the flow better, you may want to print the base layers hotter then the rest of the print.} xywh {15 325 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 value 1.1 textsize 14
        }
      }
      Fl_Group {} {
        label Size
        xywh {5 55 535 55} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider RaftSizeSlider {
          label {Larger then objects (mm)}
          callback {MVC->SetRaftSize(o->value());}
          tooltip {How much larget then the print should the Raft be.} xywh {15 80 515 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 50 value 1.33 textsize 14
        }
      }
      Fl_Group {} {
        label Interface open
        tooltip {This is the layer(s) connecting to the print itself. Unlike the Base layer, they should be "nice" and with a normal extrusion ratio.} xywh {5 370 535 235} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider RaftInterfaceMaterialPrDistanceRatioSlider {
          label {Material pr. distance ratio}
          callback {MVC->SetRaftInterfaceMaterialPrDistanceRatio(o->value());}
          xywh {15 435 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
        }
        Fl_Value_Slider RaftRotationPrLayerSlider {
          label {Rotation pr. layer}
          callback {MVC->SetRaftRotationPrLayer(o->value());}
          xywh {15 470 515 20} type {Horz Knob} selection_color 2 align 5 maximum 360 step 1 value 90 textsize 14
        }
        Fl_Value_Slider RaftInterfaceDistanceSlider {
          label {Distance between lines}
          callback {MVC->SetRaftInterfaceDistance(o->value());}
          tooltip {Distance between the base layer's lines} xywh {15 505 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 10 step 0.1 value 2 textsize 14
        }
        Fl_Value_Slider RaftInterfaceThicknessSlider {
          label {Thickness ratio}
          callback {MVC->SetRaftBaseThickness(o->value());}
          tooltip {How much thicker or thinner then a normal layer should the raft base be.} xywh {15 540 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 step 0.1 value 1 textsize 14
        }
        Fl_Value_Slider RaftInterfaceLayerCountSlider {
          label {Number of interface layers}
          callback {MVC->SetRaftInterfaceLayerCount(o->value());}
          xywh {15 400 515 20} type {Horz Knob} selection_color 2 align 5 maximum 5 step 1 value 2 textsize 14
        }
        Fl_Value_Slider RaftInterfaceTemperatureSlider {
          label {Temperature ratio}
          callback {MVC->SetRaftInterfaceTemperature(o->value());}
          tooltip {To make the flow better, you may want to print the base layers hotter then the rest of the print.} xywh {15 575 515 20} type {Horz Knob} selection_color 2 align 5 minimum 0.1 maximum 3 value 1.1 textsize 14
        }
      }
      Fl_Button {} {
        label Ok
        callback {raftSettingsWindow->hide();}
        xywh {210 610 110 25}
      }
    }
    Fl_Window DisplaySettingsWindow {
      label {Display Settings}
      xywh {122 50 590 870} type Double hide resizable modal
    } {
      Fl_Group {} {
        label {STL rendering}
        xywh {0 25 575 305} box ENGRAVED_FRAME color 39
      } {
        Fl_Light_Button DisplayPolygonsButton {
          label {Display Polygons}
          callback {MVC->SetDisplayPolygons(o->value());}
          xywh {40 35 230 20} value 1 selection_color 63
        }
        Fl_Light_Button DisplayWireframeButton {
          label {Display Wireframe}
          callback {MVC->SetDisplayWireframe(o->value());}
          xywh {315 35 165 20} selection_color 63
        }
        Fl_Light_Button DisplayNormalsButton {
          label {Display Normals}
          callback {MVC->SetDisplayNormals(o->value());}
          xywh {45 160 225 20} selection_color 63
        }
        Fl_Light_Button DisplayEndpointsButton {
          label {Display Endpoints}
          callback {MVC->SetDisplayEndpoints(o->value());}
          xywh {315 160 250 20} selection_color 63
        }
        Fl_Value_Slider PolygonValSlider {
          label Val
          callback {MVC->SetPolygonVal(o->value());
MVC->redraw();}
          xywh {40 100 230 15} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider PolygonSatSlider {
          label Sat
          callback {MVC->SetPolygonSat(o->value());
MVC->redraw();}
          xywh {40 80 230 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider PolygonHueSlider {
          label Hue
          callback {MVC->SetPolygonHue(o->value());
MVC->redraw();}
          xywh {40 60 230 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider WireframeValSlider {
          label Val
          callback {MVC->SetWireframeVal(o->value());
MVC->redraw();}
          xywh {315 100 250 25} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider WireframeSatSlider {
          label Sat
          callback {MVC->SetWireframeSat(o->value());
MVC->redraw();}
          xywh {315 80 250 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider WireframeHueSlider {
          label Hue
          callback {MVC->SetWireframeHue(o->value());
MVC->redraw();}
          xywh {315 60 250 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider NormalValSlider {
          label Val
          callback {MVC->SetNormalsVal(o->value());
MVC->redraw();}
          xywh {45 225 225 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider NormalSatSlider {
          label Sat
          callback {MVC->SetNormalsSat(o->value());
MVC->redraw();}
          xywh {45 205 225 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider NormalHueSlider {
          label Hue
          callback {MVC->SetNormalsHue(o->value());
MVC->redraw();}
          xywh {45 185 225 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider EndpointValSlider {
          label Val
          callback {MVC->SetEndpointsVal(o->value());
MVC->redraw();}
          xywh {315 225 250 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider EndpointSatSlider {
          label Sat
          callback {MVC->SetEndpointsSat(o->value());
MVC->redraw();}
          xywh {315 205 250 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider EndpointHueSlider {
          label Hue
          callback {MVC->SetEndpointsHue(o->value());
MVC->redraw();}
          xywh {315 185 250 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Light_Button DisplayBBoxButton {
          label {Display Bounding Box}
          callback {MVC->SetDisplayBBox(o->value());}
          xywh {45 295 225 20} selection_color 63
        }
        Fl_Value_Slider HighlightSlider {
          label Highlight
          callback {MVC->SetHighlight(o->value());
MVC->redraw();}
          xywh {315 305 250 20} type {Horz Knob} selection_color 2 align 5 value 0.5 textsize 14
        }
        Fl_Value_Slider NormalLengthSlider {
          label {Normals length}
          callback {MVC->SetNormalsLength(o->value());
MVC->redraw();}
          xywh {45 265 225 25} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 30 step 0.1 value 10 textsize 14
        }
        Fl_Value_Slider EndpointSizeSlider {
          label {Endpoints size}
          callback {MVC->SetEndPointSize(o->value());
MVC->redraw();}
          xywh {315 265 250 20} type {Horz Knob} selection_color 2 align 5 minimum 1 maximum 20 step 0.1 value 8 textsize 14
        }
        Fl_Light_Button DisplayWireframeShadedButton {
          label Shaded
          callback {MVC->SetDisplayWireframeShaded(o->value());}
          xywh {485 35 80 20} selection_color 63
        }
        Fl_Value_Slider PolygonOpasitySlider {
          label Opa
          callback {MVC->SetPolygonOpasity(o->value());
MVC->redraw();}
          xywh {40 120 230 25} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
      }
      Fl_Group {} {
        label {GCode rendering}
        xywh {0 345 575 175} box ENGRAVED_FRAME color 39
      } {
        Fl_Light_Button DisplayGCodeButton {
          label {Display GCode}
          callback {MVC->SetDisplayGCode(o->value());
MVC->redraw();}
          xywh {50 355 195 20} value 1 selection_color 63
        }
        Fl_Value_Slider GCodeExtrudeValSlider {
          label Val
          callback {MVC->SetGCodeExtrudeVal(o->value());
MVC->redraw();}
          xywh {50 420 195 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider GCodeExtrudeSatSlider {
          label Sat
          callback {MVC->SetGCodeExtrudeSat(o->value());
MVC->redraw();}
          xywh {50 400 195 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider GCodeExtrudeHueSlider {
          label Hue
          callback {MVC->SetGCodeExtrudeHue(o->value());
MVC->redraw();}
          xywh {50 380 195 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Light_Button LuminanceShowsSpeedButton {
          label {Luminance shows speed}
          callback {MVC->SetLuminanceShowsSpeed(o->value());
MVC->redraw();}
          xywh {315 355 260 20} value 1 selection_color 63
        }
        Fl_Button {} {
          label {Crop Range}
          callback {float start = GCodeDrawStartSlider->value();
float end = GCodeDrawEndSlider->value();
GCodeDrawStartSlider->range(start,end);
GCodeDrawEndSlider->range(start,end);
GCodeDrawStartSlider->redraw();
GCodeDrawEndSlider->redraw();}
          xywh {50 495 220 20}
        }
        Fl_Button {} {
          label {Reset crop range}
          callback {GCodeDrawStartSlider->range(0,1);
GCodeDrawEndSlider->range(0,1);
GCodeDrawStartSlider->redraw();
GCodeDrawEndSlider->redraw();}
          xywh {295 495 280 20}
        }
        Fl_Slider GCodeDrawStartSlider {
          label From
          callback {MVC->SetGCodeDrawStart(o->value());}
          xywh {50 445 525 20} type {Horz Knob} color 39 selection_color 2 align 4
        }
        Fl_Slider GCodeDrawEndSlider {
          label To
          callback {MVC->SetGCodeDrawEnd(o->value());}
          xywh {50 470 525 20} type {Horz Knob} color 39 selection_color 2 align 4
        }
        Fl_Value_Slider GCodeMoveValSlider {
          label Val
          callback {MVC->SetGCodeMoveVal(o->value());
MVC->redraw();}
          xywh {315 420 260 20} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider GCodeMoveSatSlider {
          label Sat
          callback {MVC->SetGCodeMoveSat(o->value());
MVC->redraw();}
          xywh {315 400 260 15} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
        Fl_Value_Slider GCodeMoveHueSlider {
          label Hue
          callback {MVC->SetGCodeMoveHue(o->value());
MVC->redraw();}
          xywh {315 380 260 15} type {Horz Knob} selection_color 2 align 4 value 0.5 textsize 14
        }
      }
      Fl_Group {} {
        label {Layer preview}
        xywh {0 540 575 120} box ENGRAVED_FRAME color 39
      } {
        Fl_Value_Slider CuttingPlaneValueSlider {
          label Cuttingplane
          callback {MVC->SetCuttingPlaneValue(o->value());}
          xywh {15 585 560 20} type {Horz Knob} align 5 value 0.5 textsize 14
        }
        Fl_Light_Button DisplayCuttingPlaneButton {
          label {Display CuttingPlane}
          callback {MVC->SetDisplayCuttingPlane(o->value());}
          xywh {15 545 165 25} selection_color 63
        }
        Fl_Light_Button DisplayinFillButton {
          label {Display inFill}
          callback {MVC->SetDisplayinFill(o->value());}
          xywh {190 545 170 25} selection_color 63
        }
        Fl_Light_Button DisplayAllLayersButton {
          label {Display all layers}
          callback {MVC->SetDisplayAllLayers(o->value());}
          xywh {370 545 205 25} selection_color 63
        }
        Fl_Light_Button DrawCuttingPlaneVertexNumbersButton {
          label {Vertex numbers}
          callback {MVC->SetDrawCuttingPlaneVertexNumbers(o->value());}
          xywh {15 615 160 25} selection_color 63
        }
        Fl_Light_Button DrawCuttingPlaneLineNumbersButton {
          label {Line numbers}
          callback {MVC->SetDrawCuttingPlaneLineNumbers(o->value());}
          xywh {185 615 175 25} selection_color 63
        }
        Fl_Light_Button DrawCuttingPlanePolygonNumbersButton {
          label {Polygon numbers}
          callback {MVC->SetDrawCuttingPlanePolyNumbers(o->value());}
          xywh {370 615 205 25} selection_color 63
        }
      }
      Fl_Group {} {
        label Lights
        xywh {0 675 575 60} box ENGRAVED_FRAME color 39
      } {
        Fl_Light_Button {} {
          label {Enable light 0}
          callback {MVC->SetEnableLight(0, o->value());}
          xywh {15 685 120 20} value 1 selection_color 63
        }
        Fl_Light_Button {} {
          label {Enable light 1}
          callback {MVC->SetEnableLight(1, o->value());}
          xywh {15 705 120 20} selection_color 63
        }
        Fl_Light_Button {} {
          label {Enable light 2}
          callback {MVC->SetEnableLight(2, o->value());}
          xywh {290 680 140 15} selection_color 63
        }
        Fl_Light_Button {} {
          label {Enable light 3}
          callback {MVC->SetEnableLight(3, o->value());}
          xywh {290 705 140 20} value 1 selection_color 63
        }
        Fl_Button {} {
          label {Edit light 0}
          xywh {140 680 0 20} deactivate
        }
        Fl_Button {} {
          label {Edit light 1}
          xywh {140 705 0 20} deactivate
        }
        Fl_Button {} {
          label {Edit light 2}
          xywh {440 680 135 25} deactivate
        }
        Fl_Button {} {
          label {Edit light 3}
          xywh {440 705 135 20} deactivate
        }
      }
      Fl_Light_Button DisplayDebuginFillButton {
        label {Display Debug inFill}
        callback {MVC->SetDisplayDebuginFill(o->value());}
        xywh {85 780 160 25} selection_color 63
      }
      Fl_Light_Button DisplayDebugButton {
        label Debug
        callback {if(o->value())
{
DisplayDebuginFillButton->show();
ExamineSlider->show();
}
else
{
DisplayDebuginFillButton->hide();
ExamineSlider->hide();
}


MVC->redraw();}
        xywh {10 780 70 25} selection_color 63
      }
      Fl_Light_Button DrawVertexNumbersButton {
        label {Draw vertex numbers}
        callback {MVC->SetDrawVertexNumbers(o->value());}
        xywh {250 780 170 25} selection_color 63
      }
      Fl_Light_Button DrawLineNumbersButton {
        label {Draw line numbers}
        callback {MVC->SetDrawLineNumbers(o->value());}
        xywh {425 780 160 25} selection_color 63
      }
      Fl_Value_Slider ExamineSlider {
        label Examine
        callback {MVC->SetExamine(o->value());}
        xywh {85 755 500 20} type Horizontal align 4 step 0.001 value 0.098 textsize 14
      }
      Fl_Button {} {
        label Ok
        callback {DisplaySettingsWindow->hide();}
        xywh {195 825 210 40}
      }
    }
    Fl_Window CustomButtonsSetupWindow {
      label CustomButtonsSetup open
      xywh {340 112 455 410} type Double hide
    } {
      Fl_Text_Editor CustomButtonText {
        label {Button gcode}
        xywh {25 135 410 260} selection_color 31
        code0 {Fl_Text_Buffer *CustomButtonBuffer = new Fl_Text_Buffer();}
        code1 {o->buffer(CustomButtonBuffer);}
      }
      Fl_Input CustomButtonLabel {
        label {Button label:}
        xywh {115 82 320 28}
      }
      Fl_Value_Slider CustomButtonSelectorSlider {
        label {Button to edit:}
        callback {MVC->GetCustomButtonText(o->value()-1);}
        xywh {155 10 240 25} type Horizontal align 4 minimum 1 maximum 20 step 1 value 1 textsize 14
      }
      Fl_Button {} {
        label Test
        callback {MVC->TestCustomButton();}
        xywh {70 40 120 25}
      }
      Fl_Button {} {
        label Save
        callback {MVC->SaveCustomButton();}
        xywh {200 40 150 25}
      }
    }
    Fl_Window PrinterCalibrationWindow {
      label PrinterCalibrationWindow open
      xywh {527 502 375 315} type Double hide
    } {
      Fl_Group {} {
        label Calibrate open
        xywh {20 51 335 187} box ENGRAVED_FRAME color 39
      } {
        Fl_Text_Display {} {
          label {Makes a test print with various settings. (Disabled)}
          xywh {21 123 44 25} box NO_BOX labelsize 10 align 8
        }
        Fl_Button {} {
          label {Calibration Print}
          xywh {105 167 154 38} box NO_BOX color 41 labelfont 2
        }
      }
      Fl_Button {} {
        label Ok
        callback {DisplaySettingsWindow->hide();}
        xywh {120 252 125 28}
      }
    }
  }
  Function {show(int argc, char **argv)} {open
  } {
    code {Fl::visual( FL_DOUBLE | FL_RGB);
Fl::scheme("plastic");
MVC->ReadStl("C:/code/printed-parts/z-tensioner_1off.stl");
\#ifndef ENABLE_LUA
    Tabs->remove(LuaTab->parent());
\#endif
mainWindow->show(argc, argv);
MVC->init();
MVC->CopySettingsToGUI();
MVC->draw();
MVC->redraw();
MVC->redraw();} {}
  }
} 

decl {extern GUI* gui;} {} 

Function {TempReadTimer(void *)} {open return_type void
} {
  code {if(gui->TempReadingEnabledButton->value())
{
if(!gui->MVC->serial->isPrinting())
{
gui->MVC->serial->SendNow("M105");
}
Fl::repeat_timeout(gui->MVC->gui ? gui->MVC->ProcessControl.TempUpdateSpeed: 10.0f , &TempReadTimer);
}} {}
} 
