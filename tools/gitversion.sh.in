#!/bin/sh

if [ "$#" -lt 2 ]; then
  echo "Usage: $0 <output_file.h> <tarball_file.h>"
  exit 1
fi

VERSION_H="$1"
TARBALL_VERSION_H="$2"
TOPSRCDIR=`dirname "${TARBALL_VERSION_H}"`/..

# Check if building from git
if [ ! -d "${TOPSRCDIR}/.git" ]; then
    # Not git, just ensure output file exists
    if [ ! -f "${TARBALL_VERSION_H}" ]; then
        echo "Warning: Not building from git and ${TARBALL_VERSION_H} doesn't exist"
        echo const string GIT_COMMIT=\"Unknown\"\;     > $VERSION_H
        echo const string GIT_COMMIT_DATE=\"Unknown\"\; >> $VERSION_H
    # else
        # echo "Not updating ${VERSION_H} - building from tarball"
    fi
    exit 0
fi

AWK=@AWK@

FSEQUAL="="
# if the --version argument of awk is supported try and determine
# if BSD awk is used
AWK_VERSION=$(${AWK} --version 2>/dev/null)
if [ $? -ne 0 ] ; then
	# test for BSD awk which needs a blackslash:
	if [ "X`$AWK_VERSION  | head -n 1 | grep BSD`" != "X" ] ; then
	    FSEQUAL="\="
	fi
fi

GIT_DIR="${TOPSRCDIR}/.git"
export GIT_DIR
LOG=`git log -1`

COMMIT=`echo "$LOG" | $AWK '/commit/{print $2; exit}'`
DATE=`  echo "$LOG" | $AWK -v FS="Date:   " '/Date:/{print $2; exit}'`

OLDCOMMIT=""
if [ -e $VERSION_H ]; then
    OLDCOMMIT=`$AWK -v FS="$FSEQUAL" '/const string GIT_COMMIT=/{print $2}' $VERSION_H`
fi

if [ "x\"$COMMIT\";" != "x$OLDCOMMIT" ]; then
    # echo "Updating commit"
    echo const string GIT_COMMIT=\"$COMMIT\"\;     > $VERSION_H
    echo const string GIT_COMMIT_DATE=\"$DATE\"\; >> $VERSION_H
#else
    # echo "Commit has not changed"
fi
